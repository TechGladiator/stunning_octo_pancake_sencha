{
    "type": "Ext.panel.Panel",
    "reference": {
        "name": "items",
        "type": "array"
    },
    "codeClass": null,
    "userConfig": {
        "ErrorCount": 0,
        "FieldData": [
            "`undefined`"
        ],
        "FieldErrors": [
            "`undefined`"
        ],
        "FieldNames": [
            "`undefined`"
        ],
        "Filename": "`undefined`",
        "FirstError": [
            "`undefined`"
        ],
        "FromDB": false,
        "FullResults": [
            "`undefined`"
        ],
        "InfoWindow": [
            "`undefined`"
        ],
        "Map": "`undefined`",
        "Mapped": false,
        "Markers": [
            "[]"
        ],
        "Names": [
            "[\"Name\",\"Address\",\"Address 2\",\"City\",\"State\",\"Zip\",\"Purpose\",\"Property Owner\",\"Creation Date\"]"
        ],
        "RowCount": 0,
        "SortASC": true,
        "container|align": "center",
        "designer|userAlias": "octo.pancake",
        "designer|userClassName": "octo.Pancake",
        "id": "octoPancake",
        "layout": "vbox",
        "scrollable": true
    },
    "configAlternates": {
        "container|align": "string",
        "designer|displayName": "string",
        "layout": "string",
        "scrollable": "auto",
        "designer|userAlias": "string",
        "designer|userClassName": "string",
        "ErrorCount": "number",
        "FieldData": "array",
        "FieldErrors": "array",
        "FieldNames": "array",
        "FirstError": "object",
        "FullResults": "object",
        "RowCount": "number",
        "Names": "array",
        "InfoWindow": "object",
        "Markers": "array",
        "Mapped": "boolean",
        "FromDB": "boolean",
        "SortASC": "boolean",
        "Filename": "string",
        "Map": "string",
        "id": "string"
    },
    "name": "MyPanel3",
    "designerId": "16e2c03a-33f6-4a74-8aed-a2feb7f0a956",
    "customConfigs": [
        {
            "group": "(Custom Properties)",
            "name": "ErrorCount",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "FieldData",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "FieldErrors",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "FieldNames",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "Filename",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "FirstError",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "FullResults",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "RowCount",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "Names",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "Map",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "InfoWindow",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "Markers",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "Mapped",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "FromDB",
            "type": "string"
        },
        {
            "group": "(Custom Properties)",
            "name": "SortASC",
            "type": "string"
        }
    ],
    "viewControllerInstanceId": "9af0c4f0-6842-4f47-a162-04751f8d4c10",
    "viewModelInstanceId": "b8362711-5780-4fc0-a234-5f24162dc571",
    "cn": [
        {
            "type": "Ext.panel.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "border": false,
                "margin": "auto",
                "maxHeight": 44,
                "maxWidth": 832.5,
                "minWidth": 382.5,
                "title": "Stunning Octo Pancake",
                "width": "75%"
            },
            "configAlternates": {
                "border": "boolean",
                "layout|flex": "number",
                "layout|margins": "string",
                "margin": "auto",
                "maxHeight": "number",
                "maxWidth": "number",
                "minWidth": "number",
                "title": "string",
                "width": "auto",
                "designer|userAlias": "string",
                "designer|userClassName": "string"
            },
            "name": "MyPanel",
            "designerId": "f0a72079-e1e0-4566-a40b-836ef568452e",
            "viewControllerInstanceId": "68916243-dc6f-4e02-a397-d81f60a22050",
            "viewModelInstanceId": "60f2fdb3-5ad0-47db-8d23-606935347f93"
        },
        {
            "type": "Ext.tab.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "activeTab": 0,
                "bodyBorder": false,
                "bodyPadding": "64 32",
                "designer|displayName": "Tabs",
                "designer|uiInterfaceName": "default-framed",
                "frame": true,
                "id": "tabs",
                "margin": "48 0 32",
                "maxHeight": 210,
                "maxWidth": 832.5,
                "minHeight": 210,
                "minWidth": 382.5,
                "width": "75%"
            },
            "configAlternates": {
                "activeTab": "auto",
                "designer|displayName": "string",
                "layout|flex": "number",
                "margin": "auto",
                "maxWidth": "number",
                "minWidth": "number",
                "width": "auto",
                "bodyBorder": "boolean",
                "bodyPadding": "auto",
                "designer|uiInterfaceName": "string",
                "frame": "boolean",
                "maxHeight": "number",
                "designer|userAlias": "string",
                "designer|userClassName": "string",
                "minHeight": "number",
                "id": "string"
            },
            "name": "MyTabPanel",
            "designerId": "e4e3f102-10da-4025-8f97-c82b4fbce4e6",
            "viewControllerInstanceId": "ee51bcc2-bf01-4eea-a8b0-1542cfc9b939",
            "viewModelInstanceId": "68780b41-9f1e-4c8e-a262-61bd92992f4d",
            "cn": [
                {
                    "type": "Ext.panel.Panel",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "container|align": "middle",
                        "layout": "hbox",
                        "title": "Upload File"
                    },
                    "configAlternates": {
                        "title": "string",
                        "container|align": "string",
                        "layout": "string",
                        "bodyPadding": "auto"
                    },
                    "name": "MyPanel1",
                    "designerId": "5a56b740-a7b5-49ce-a5a1-1ebcaa1ba4d1",
                    "cn": [
                        {
                            "type": "Ext.tab.Tab",
                            "reference": {
                                "name": "tabConfig",
                                "type": "object"
                            },
                            "codeClass": null,
                            "name": "TabConfig",
                            "designerId": "9f3d8e40-bf1a-48db-b029-9213c99514c2"
                        },
                        {
                            "type": "Ext.form.field.File",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fieldLabel": "Choose CSV File:",
                                "id": "chooseCSVFile",
                                "labelWidth": 110,
                                "layout|flex": null,
                                "maxWidth": 680,
                                "width": "100%"
                            },
                            "configAlternates": {
                                "fieldLabel": "string",
                                "layout|flex": "number",
                                "labelWidth": "number",
                                "maxWidth": "number",
                                "width": "auto",
                                "designer|userAlias": "string",
                                "designer|userClassName": "string",
                                "id": "string"
                            },
                            "name": "MyFileUpload",
                            "designerId": "5235c364-e1bd-44f8-8c6d-d2111bd05970",
                            "viewControllerInstanceId": "1999b923-d265-4fbe-929f-da027c46e5e9",
                            "viewModelInstanceId": "175da306-7477-44a7-a8e2-187cf5ca359c",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|commentHeader": [
                                            "remove 'C:\\fakepath\\' and set filename"
                                        ],
                                        "fn": "onChooseCSVFileChange",
                                        "implHandler": [
                                            "let filename = $(\"#chooseCSVFile-inputEl\").val();",
                                            "filename = filename.substring(filename.lastIndexOf(\"\\\\\") + 1);",
                                            "if (filename !== \"\") {",
                                            "    $(\"#chooseCSVFile-inputEl\").val(filename);",
                                            "}",
                                            "Ext.getCmp('octoPancake').Filename = filename;"
                                        ],
                                        "name": "change",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "designer|commentHeader": "comment",
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onChooseCSVFileChange",
                                    "designerId": "894572d4-840c-4e8b-ae51-9179ecb37c68"
                                }
                            ]
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "id": "submitButton",
                                "layout|flex": 1,
                                "margin": "0 0 0 10",
                                "text": "Submit"
                            },
                            "configAlternates": {
                                "designer|displayName": "string",
                                "layout|flex": "number",
                                "margin": "auto",
                                "maxWidth": "number",
                                "text": "string",
                                "designer|userAlias": "string",
                                "designer|userClassName": "string",
                                "id": "string"
                            },
                            "name": "MyButton",
                            "designerId": "f1afc6df-5145-4287-b619-8898265559bb",
                            "viewControllerInstanceId": "df782098-3105-485d-ad35-8515a16d73c3",
                            "viewModelInstanceId": "c91f783e-6325-4ccc-b3a7-e36935c341a9",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onSubmitButtonClick",
                                        "implHandler": [
                                            "if (!$(\"#chooseCSVFile-button-fileInputEl\")[0].files.length) {",
                                            "    Ext.MessageBox.alert(\"No File Chosen\", \"Please choose at least one file to parse.\");",
                                            "    return;",
                                            "}",
                                            "",
                                            "const file = document.getElementById(\"chooseCSVFile-button-fileInputEl\").files[0];",
                                            "",
                                            "Papa.parse(file, {",
                                            "    // base config to use for each file",
                                            "    delimiter: \"\",",
                                            "    header: true,",
                                            "    dynamicTyping: false,",
                                            "    skipEmptyLines: true,",
                                            "    preview: 0,",
                                            "    step: undefined,",
                                            "    encoding: \"\",",
                                            "    worker: false,",
                                            "    comments: false,",
                                            "    complete: this.completeFn,",
                                            "    error: this.errorFn",
                                            "});"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onSubmitButtonClick",
                                    "designerId": "e0deb1ca-e873-473f-b4e6-c3c35dce1cad"
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "Ext.panel.Panel",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "container|align": "middle",
                        "layout": "hbox",
                        "title": "Search Imports"
                    },
                    "configAlternates": {
                        "title": "string",
                        "bodyPadding": "auto",
                        "layout": "string",
                        "container|align": "string",
                        "designer|displayName": "string"
                    },
                    "name": "MyPanel2",
                    "designerId": "218054b4-27ab-4f2b-9b4e-f6feb25644a1",
                    "cn": [
                        {
                            "type": "Ext.tab.Tab",
                            "reference": {
                                "name": "tabConfig",
                                "type": "object"
                            },
                            "codeClass": null,
                            "name": "TabConfig1",
                            "designerId": "a159d083-136e-4939-91d5-766f58013a00"
                        },
                        {
                            "type": "Ext.form.field.Text",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|displayName": "Search Field",
                                "fieldLabel": "Search By Import Name",
                                "id": "search",
                                "labelWidth": 150,
                                "maxWidth": 680,
                                "width": "100%"
                            },
                            "configAlternates": {
                                "designer|displayName": "string",
                                "width": "auto",
                                "fieldLabel": "string",
                                "labelWidth": "number",
                                "maxWidth": "number",
                                "id": "string"
                            },
                            "name": "MyTextField",
                            "designerId": "c3a78e9b-bff9-49f0-8fa6-7231c0955a60"
                        },
                        {
                            "type": "Ext.button.Button",
                            "reference": {
                                "name": "items",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "id": "searchButton",
                                "layout|flex": 1,
                                "margin": "0 0 0 10",
                                "text": "Search"
                            },
                            "configAlternates": {
                                "layout|flex": "number",
                                "margin": "auto",
                                "text": "string",
                                "id": "string"
                            },
                            "name": "MyButton1",
                            "designerId": "a0372666-68e8-40dd-b8d1-e59dab4f0fd6",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onSearchButtonClick",
                                        "implHandler": [
                                            "const app = StunningOctoPancake.app;",
                                            "const controller = app.getOctoPancakeControlController();",
                                            "const errorResponse = controller.ErrorResponse;",
                                            "",
                                            "controller.searchRecords(app, controller, errorResponse);"
                                        ],
                                        "name": "click",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onSearchButtonClick",
                                    "designerId": "d1e749bd-ce56-478a-9970-059414c7dbc6"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.panel.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "hidden": true,
                "html": "<div id=\"resultsPanelDiv\"></div>",
                "id": "resultsPanelContainer",
                "layout": "fit",
                "minHeight": 300,
                "width": 400
            },
            "configAlternates": {
                "hidden": "boolean",
                "html": "string",
                "id": "string",
                "layout": "string",
                "layout|flex": "number",
                "minHeight": "number",
                "width": "auto"
            },
            "name": "MyPanel5",
            "designerId": "4de63187-8e19-4e47-842f-9800bb053cf1"
        },
        {
            "type": "Ext.panel.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|displayName": "map",
                "hidden": true,
                "html": "<div id=\"map\"></div>",
                "id": "mapPanel"
            },
            "configAlternates": {
                "height": "auto",
                "hidden": "boolean",
                "id": "string",
                "layout|flex": "number",
                "width": "auto",
                "center": "object",
                "margin": "auto",
                "html": "string",
                "designer|displayName": "string"
            },
            "name": "MyPanel4",
            "designerId": "69ed5ac6-35f1-46eb-9cbf-38a9707134c8"
        },
        {
            "type": "Ext.button.Segmented",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "hidden": true,
                "id": "recordButtons",
                "margin": "50 0 0",
                "maxHeight": 50,
                "minHeight": 50,
                "width": 600
            },
            "configAlternates": {
                "layout|flex": "number",
                "maxHeight": "number",
                "width": "auto",
                "designer|userAlias": "string",
                "designer|userClassName": "string",
                "margin": "auto",
                "minHeight": "number",
                "hidden": "boolean",
                "id": "string"
            },
            "name": "MySegmentedButton",
            "designerId": "dc35481a-6d86-4b36-87c5-8f5585c2034c",
            "viewControllerInstanceId": "e9edbb2e-3e0c-40c0-8e2f-093a651601d3",
            "viewModelInstanceId": "db21f3d0-ff2b-48c3-923b-aeed1e1a72ee",
            "cn": [
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "id": "editData",
                        "text": "Edit Data"
                    },
                    "configAlternates": {
                        "text": "string",
                        "style": "string",
                        "designer|userAlias": "string",
                        "designer|userClassName": "string",
                        "id": "string"
                    },
                    "name": "MyButton2",
                    "designerId": "9d050023-85e3-42bf-bb2a-1dd0ae3609a6",
                    "viewControllerInstanceId": "cd5b1d03-64ac-47fe-abe9-b3642690b2a5",
                    "viewModelInstanceId": "6c6e5a0f-ee91-4a2f-83fe-face38fcb619",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onEditButtonClick",
                                "implHandler": [
                                    "Ext.getCmp('importFileName').hide();",
                                    "Ext.getCmp('editData').hide();",
                                    "Ext.getCmp('repairNext').hide();",
                                    "Ext.getCmp('editImportFileName').show();",
                                    "Ext.getCmp('saveEdits').show();"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "name": "string",
                                "scope": "string",
                                "implHandler": "code"
                            },
                            "name": "onEditButtonClick",
                            "designerId": "cb11ecb7-f09b-4f0e-b307-83ac91ae5f74"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "hidden": true,
                        "id": "saveEdits",
                        "text": "Save Edits"
                    },
                    "configAlternates": {
                        "hidden": "boolean",
                        "id": "string",
                        "text": "string"
                    },
                    "name": "MyButton6",
                    "designerId": "d32b3e38-78f7-4b3f-9ee6-edb11c4afefa",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onSaveEditsClick",
                                "implHandler": [
                                    "const app = StunningOctoPancake.app;",
                                    "",
                                    "Ext.getCmp('editImportFileName').hide();",
                                    "Ext.getCmp('saveEdits').hide();",
                                    "Ext.getCmp('importFileName').show();",
                                    "Ext.getCmp('editData').show();",
                                    "if (app.ErrorCount > 0) {",
                                    "    Ext.getCmp('repairNext').show();",
                                    "}",
                                    "if (app.FromDB) {",
                                    "    let i = 0;",
                                    "    while (i < app.FieldData.length) {",
                                    "        app.getOctoPancakeControlController().updateRecord(app.FieldData[i]);",
                                    "        i++;",
                                    "    }",
                                    "}"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onSaveEditsClick",
                            "designerId": "a6674705-3faf-4415-9788-8e850112bf3f"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "hidden": true,
                        "id": "repairNext",
                        "text": "Repair Next Error"
                    },
                    "configAlternates": {
                        "hidden": "boolean",
                        "id": "string",
                        "text": "string"
                    },
                    "name": "MyButton7",
                    "designerId": "f53a8126-64e1-4726-a04a-12e191d7d4ad",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onRepairNextClick",
                                "implHandler": [
                                    "const app = StunningOctoPancake.app;",
                                    "const controller = app.getOctoPancakeControlController();",
                                    "const message = app.FieldErrors[0].message;",
                                    "const row = app.FieldErrors[0].row;",
                                    "const recordRow = app.FieldData[row];",
                                    "",
                                    "controller.repairRecord(app, controller, message, row, recordRow);"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "name": "string",
                                "scope": "string",
                                "implHandler": "code"
                            },
                            "name": "onRepairNextClick",
                            "designerId": "a5d31ab4-a462-4df0-b64c-61db996559ac"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "hidden": true,
                        "id": "saveRecords",
                        "text": "Save Records"
                    },
                    "configAlternates": {
                        "text": "string",
                        "style": "string",
                        "designer|userAlias": "string",
                        "designer|userClassName": "string",
                        "hidden": "boolean",
                        "id": "string"
                    },
                    "name": "MyButton3",
                    "designerId": "077b12a8-f6b6-4e29-bc28-f640e8ccd8ad",
                    "viewControllerInstanceId": "3c665bc5-54ec-41f6-8dd0-cbe45a0d690d",
                    "viewModelInstanceId": "ba0549fe-59d8-46f0-91e8-be76e22a7886",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onSaveRecordsClick",
                                "implHandler": [
                                    "const app = StunningOctoPancake.app;",
                                    "const controller = app.getOctoPancakeControlController();",
                                    "",
                                    "Ext.MessageBox.prompt(\"Save\", \"Name this imported data\", controller.postData, controller);",
                                    "document.getElementById(\"messagebox-1001-textfield-inputEl\").value = app.Filename;"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onSaveRecordsClick",
                            "designerId": "0911fdad-b2cd-40f7-afe4-79e9baaa020e"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "id": "mapData",
                        "text": "Map Imported Data"
                    },
                    "configAlternates": {
                        "text": "string",
                        "style": "string",
                        "designer|userAlias": "string",
                        "designer|userClassName": "string",
                        "id": "string"
                    },
                    "name": "MyButton4",
                    "designerId": "6a8da033-9a6e-4db6-ade7-1f99d2f82285",
                    "viewControllerInstanceId": "036db16f-04e4-4810-b7dd-fbd2cb360f1b",
                    "viewModelInstanceId": "969983b7-ec78-4946-a364-1144297bdaaf",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onMapDataClick",
                                "implHandler": [
                                    "const app = StunningOctoPancake.app;",
                                    "const controller = app.getOctoPancakeControlController();",
                                    "",
                                    "Ext.getCmp('mapPanel').show();",
                                    "if (app.Mapped === false) {",
                                    "    controller.initialize(app);",
                                    "}",
                                    "controller.getAddressList(app);"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onMapDataClick",
                            "designerId": "2a80aca6-40df-45fb-92e3-c4dd24f3a7e4"
                        }
                    ]
                },
                {
                    "type": "Ext.button.Button",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "id": "homeButton",
                        "text": "Home"
                    },
                    "configAlternates": {
                        "text": "string",
                        "style": "string",
                        "designer|userAlias": "string",
                        "designer|userClassName": "string",
                        "id": "string"
                    },
                    "name": "MyButton5",
                    "designerId": "77ab6fd5-7cbd-41c3-86be-52c959cb9682",
                    "viewControllerInstanceId": "6a0a6cf7-bd54-44c8-8de7-07ac24f2334a",
                    "viewModelInstanceId": "6a8df97b-2d84-4ff7-a376-07a1da99ff65",
                    "cn": [
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onHomeButtonClick",
                                "implHandler": [
                                    "const app = StunningOctoPancake.app;",
                                    "const importGrid = Ext.getCmp('importFileName');",
                                    "const importStore = Ext.StoreMgr.get('octo.RecordDS');",
                                    "",
                                    "importStore.clearData();",
                                    "app.ErrorCount = 0;",
                                    "app.FieldData = undefined;",
                                    "app.FieldErrors = undefined;",
                                    "app.FieldNames = undefined;",
                                    "app.Filename = undefined;",
                                    "app.FirstError = undefined;",
                                    "app.FromDB = false;",
                                    "app.FullResults = undefined;",
                                    "app.InfoWindow = undefined;",
                                    "app.Map = undefined;",
                                    "app.Mapped = false;",
                                    "app.Markers = [];",
                                    "app.RowCount = 0;",
                                    "importStore.setData([]);",
                                    "importGrid.setTitle('');",
                                    "",
                                    "Ext.getCmp('tabs').show();",
                                    "Ext.getCmp('recordButtons').hide();",
                                    "Ext.getCmp('importFileName').hide();",
                                    "Ext.getCmp('editImportFileName').hide();",
                                    "Ext.getCmp('mapPanel').hide();",
                                    "Ext.getCmp('extra').hide();",
                                    "Ext.getCmp('extra1').hide();",
                                    "Ext.getCmp('saveEdits').hide();",
                                    "Ext.getCmp('editData').show();",
                                    "Ext.getCmp('saveRecords').hide();",
                                    "Ext.getCmp(\"Lat\").hide();",
                                    "Ext.getCmp(\"Long\").hide();",
                                    "Ext.getCmp(\"editLat\").hide();",
                                    "Ext.getCmp(\"editLong\").hide();",
                                    "$(\"#chooseCSVFile-inputEl\").val(null);",
                                    "$(\"#chooseCSVFile-button-fileInputEl\").val(null);",
                                    "$(\"#map\").html(\"\");",
                                    "$(\"#map\").removeAttr(\"style\");",
                                    "while (app.Names.length > 9) {",
                                    "    app.Names.pop();",
                                    "}"
                                ],
                                "name": "click",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "implHandler": "code",
                                "name": "string",
                                "scope": "string"
                            },
                            "name": "onHomeButtonClick",
                            "designerId": "3ec6f754-b05f-440c-8e1c-e152a9b1cab8"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.panel.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "hidden": true,
                "id": "importFileName",
                "margin": "48 0 32",
                "title": "title",
                "titleAlign": "center",
                "width": 1332
            },
            "configAlternates": {
                "designer|userClassName": "string",
                "extend": "string",
                "designer|userAlias": "string",
                "id": "string",
                "margin": "auto",
                "title": "string",
                "titleAlign": "string",
                "width": "auto",
                "hidden": "boolean"
            },
            "name": "MyPanel6",
            "designerId": "acf390d5-6d93-46e6-ac0a-73b7c2eb6072",
            "viewControllerInstanceId": "bde29fc6-3d20-4462-80ba-c0a03f37dd3a",
            "viewModelInstanceId": "f45efc5c-20b3-400f-8a21-4088851662d5",
            "cn": [
                {
                    "type": "Ext.grid.Panel",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|uiInterfaceName": "default-framed",
                        "enableColumnHide": false,
                        "frame": true,
                        "id": "recordGrid",
                        "sortableColumns": false,
                        "store": "octo.RecordDS",
                        "titleAlign": "center",
                        "width": 1332
                    },
                    "configAlternates": {
                        "layout|flex": "number",
                        "title": "string",
                        "designer|uiInterfaceName": "string",
                        "frame": "boolean",
                        "margin": "auto",
                        "titleAlign": "string",
                        "width": "auto",
                        "store": "store",
                        "designer|userAlias": "string",
                        "designer|userClassName": "string",
                        "enableColumnHide": "boolean",
                        "id": "string",
                        "sortableColumns": "boolean"
                    },
                    "name": "MyGridPanel",
                    "designerId": "51cf9bf8-b9bd-43bc-b7ee-0cc054f38af0",
                    "viewControllerInstanceId": "c0c1dd17-d795-46c2-9eb4-0736df13fd9a",
                    "viewModelInstanceId": "a73ddd39-5556-488d-aab9-92fe3071e149",
                    "cn": [
                        {
                            "type": "Ext.view.Table",
                            "reference": {
                                "name": "viewConfig",
                                "type": "object"
                            },
                            "codeClass": null,
                            "name": "MyTable",
                            "designerId": "483cd37a-5457-469b-ac0b-9fb93de65601"
                        },
                        {
                            "type": "Ext.grid.column.RowNumberer",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|displayName": "RowNumber",
                                "id": "id"
                            },
                            "configAlternates": {
                                "text": "string",
                                "designer|displayName": "string",
                                "width": "number",
                                "id": "string"
                            },
                            "name": "MyRowNumberer",
                            "designerId": "48504c1c-4bd0-4315-b6dc-ca20d94e2107",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onRownumbererHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onRownumbererHeaderClick",
                                    "designerId": "98aa4149-47e5-4435-9b2e-efa7f457c4a5"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Name",
                                "id": "Name",
                                "text": "Name",
                                "width": 170
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "id": "string"
                            },
                            "name": "MyColumn1",
                            "designerId": "31886a89-2626-4d21-9a8d-16ec422c613d",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onNameHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onNameHeaderClick",
                                    "designerId": "f36b7a64-9ae1-4421-9135-8f3ad348fd1e"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Address",
                                "id": "Address",
                                "text": "Address",
                                "width": 190
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "id": "string"
                            },
                            "name": "MyColumn2",
                            "designerId": "8ecb35d3-cc9b-4b62-82ea-4f09eb51208a",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onAddressHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onAddressHeaderClick",
                                    "designerId": "dba7856b-147c-451e-bb33-fb833b966924"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Address 2",
                                "id": "Address_2",
                                "text": "Address 2"
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "id": "string"
                            },
                            "name": "MyColumn3",
                            "designerId": "041a3b99-a6bc-420e-aded-b72d39330ebd",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onAddress2HeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onAddress2HeaderClick",
                                    "designerId": "d576ecbd-6cbb-4a6c-bded-d97064244b09"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "City",
                                "id": "City",
                                "text": "City"
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "id": "string"
                            },
                            "name": "MyColumn4",
                            "designerId": "ad4ffb16-0177-4268-8171-38577f627d9b",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onCityHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onCityHeaderClick",
                                    "designerId": "cf006646-e8a2-4b7f-b3c8-57dd7bf0e97b"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "State",
                                "id": "State",
                                "text": "State",
                                "width": 70
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "id": "string"
                            },
                            "name": "MyColumn5",
                            "designerId": "3339413d-4473-4267-96d3-2be4ce319aa0",
                            "cn": [
                                {
                                    "type": "fixedfunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "value",
                                            "metaData",
                                            "record",
                                            "rowIndex",
                                            "colIndex",
                                            "store",
                                            "view"
                                        ],
                                        "fn": "renderer",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().validateState(value, metaData);",
                                            "return value;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "designer|viewControllerFn": "string",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "renderer",
                                    "designerId": "ba0a8054-3fba-4637-aec2-d1ed55d9642d"
                                },
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onStateHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onStateHeaderClick",
                                    "designerId": "f5f2026a-7f68-4b36-b388-e4cd56d8310c"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Zip",
                                "id": "Zip",
                                "text": "Zip",
                                "width": 65
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "id": "string"
                            },
                            "name": "MyColumn6",
                            "designerId": "2426f98e-4d21-43dd-84b6-d2958c66446e",
                            "cn": [
                                {
                                    "type": "fixedfunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "value",
                                            "metaData",
                                            "record",
                                            "rowIndex",
                                            "colIndex",
                                            "store",
                                            "view"
                                        ],
                                        "fn": "renderer",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().validateZip(value, metaData);",
                                            "return value;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "designer|viewControllerFn": "string",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "renderer",
                                    "designerId": "51d14c04-bc13-46e7-9d89-14363c33ddf1"
                                },
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onZipHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onZipHeaderClick",
                                    "designerId": "4af45025-824f-4071-828c-e1117ba75a44"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Purpose",
                                "id": "Purpose",
                                "text": "Purpose"
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "id": "string"
                            },
                            "name": "MyColumn7",
                            "designerId": "51796fb6-0c0d-40d3-95f4-c017798e7f73",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onPurposeHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onPurposeHeaderClick",
                                    "designerId": "e96b0940-6039-4334-b7b7-a375cc686a89"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Property Owner",
                                "id": "Property_Owner",
                                "text": "Property Owner",
                                "width": 128
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "id": "string"
                            },
                            "name": "MyColumn8",
                            "designerId": "6d9b9f80-f979-4c45-acdd-07b8cd127a48",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onPropertyOwnerHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onPropertyOwnerHeaderClick",
                                    "designerId": "c735e0ed-1b7d-40fb-87d2-cd060b95867b"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Creation Date",
                                "id": "Creation_Date",
                                "text": "Creation Date",
                                "width": 118
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "formatter": "string",
                                "id": "string"
                            },
                            "name": "MyColumn9",
                            "designerId": "c8179654-5a84-44d3-aa5a-0649a581c42d",
                            "cn": [
                                {
                                    "type": "fixedfunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "value",
                                            "metaData",
                                            "record",
                                            "rowIndex",
                                            "colIndex",
                                            "store",
                                            "view"
                                        ],
                                        "fn": "renderer",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().validateDate(value, metaData);",
                                            "return value;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "designer|viewControllerFn": "string",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "renderer",
                                    "designerId": "dee0513c-13dd-4e19-ad64-edbbda557b17"
                                },
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onCreationDateHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onCreationDateHeaderClick",
                                    "designerId": "46a28ca5-b3c5-4e9c-b603-1ab438d3e09e"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Lat",
                                "hidden": true,
                                "id": "Lat",
                                "text": "Lat"
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "hidden": "boolean",
                                "id": "string"
                            },
                            "name": "MyColumn10",
                            "designerId": "dfb08237-59ed-4f3c-920c-2045ba1a8b52",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onLatHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onLatHeaderClick",
                                    "designerId": "71a19129-3581-4368-abdb-ac0281c3a80c"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Long",
                                "hidden": true,
                                "id": "Long",
                                "text": "Long",
                                "width": 155
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "hidden": "boolean",
                                "id": "string"
                            },
                            "name": "MyColumn11",
                            "designerId": "acfc1c90-6e48-40a2-84e3-312a599d4d1b",
                            "cn": [
                                {
                                    "type": "basiceventbinding",
                                    "reference": {
                                        "name": "listeners",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "fn": "onLongHeaderClick",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().sortRecords(column.id);"
                                        ],
                                        "name": "headerclick",
                                        "scope": "me"
                                    },
                                    "configAlternates": {
                                        "fn": "string",
                                        "implHandler": "code",
                                        "name": "string",
                                        "scope": "string"
                                    },
                                    "name": "onLongHeaderClick",
                                    "designerId": "6f789839-f625-45a3-b9d6-cb3bba0637d9"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "__parsed_extra",
                                "hidden": true,
                                "id": "extra",
                                "text": "__parsed_extra"
                            },
                            "configAlternates": {
                                "text": "string",
                                "dataIndex": "datafield",
                                "hidden": "boolean",
                                "id": "string"
                            },
                            "name": "MyColumn",
                            "designerId": "48170dff-e4dd-438c-a12d-5b52df379351"
                        },
                        {
                            "type": "basiceventbinding",
                            "reference": {
                                "name": "listeners",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "fn": "onRecordGridRowClick",
                                "implHandler": [
                                    "const app = StunningOctoPancake.app;",
                                    "const controller = app.getOctoPancakeControlController();",
                                    "const geocoder = new google.maps.Geocoder();",
                                    "const map = app.Map;",
                                    "const mapped = app.Mapped;",
                                    "const markers = app.Markers;",
                                    "",
                                    "if (record.data.Lat && record.data.Long && mapped) {",
                                    "    controller.geocodeLatLng(record.data, geocoder, map, markers, controller, rowIndex);",
                                    "} else if (mapped) {",
                                    "    Ext.MessageBox.alert(\"noResults\", `No results found for: \"${record.data.Name}\"`);",
                                    "}"
                                ],
                                "name": "rowclick",
                                "scope": "me"
                            },
                            "configAlternates": {
                                "fn": "string",
                                "name": "string",
                                "scope": "string",
                                "implHandler": "code"
                            },
                            "name": "onRecordGridRowClick",
                            "designerId": "7a373d20-7889-4b87-a102-c197feded2fe"
                        }
                    ]
                }
            ]
        },
        {
            "type": "Ext.panel.Panel",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "hidden": true,
                "id": "editImportFileName",
                "margin": "48 0 32",
                "title": "title",
                "titleAlign": "center",
                "width": 1332
            },
            "configAlternates": {
                "designer|userAlias": "string",
                "designer|userClassName": "string",
                "height": "auto",
                "title": "string",
                "width": "auto",
                "margin": "auto",
                "titleAlign": "string",
                "hidden": "boolean",
                "id": "string",
                "layout|flex": "number"
            },
            "name": "MyPanel",
            "designerId": "803bd4f1-e6c4-42c7-828b-7b56a204c4a0",
            "viewControllerInstanceId": "15e035a1-33a8-455e-b0bd-f99d3777045b",
            "viewModelInstanceId": "f71a758c-a68e-4640-92ba-2b2fa6148d9d",
            "cn": [
                {
                    "type": "Ext.grid.Panel",
                    "reference": {
                        "name": "items",
                        "type": "array"
                    },
                    "codeClass": null,
                    "userConfig": {
                        "designer|uiInterfaceName": "default-framed",
                        "enableColumnHide": false,
                        "frame": true,
                        "id": "editRecordGrid",
                        "sortableColumns": false,
                        "store": "octo.RecordDS",
                        "titleAlign": "center",
                        "width": 1332
                    },
                    "configAlternates": {
                        "layout|flex": "number",
                        "title": "string",
                        "designer|uiInterfaceName": "string",
                        "frame": "boolean",
                        "margin": "auto",
                        "titleAlign": "string",
                        "width": "auto",
                        "store": "store",
                        "designer|userAlias": "string",
                        "designer|userClassName": "string",
                        "enableColumnHide": "boolean",
                        "id": "string",
                        "sortableColumns": "boolean"
                    },
                    "name": "MyGridPanel",
                    "designerId": "7e46a7b9-066b-4847-99df-c49bf6887d22",
                    "viewControllerInstanceId": "c0c1dd17-d795-46c2-9eb4-0736df13fd9a",
                    "viewModelInstanceId": "a73ddd39-5556-488d-aab9-92fe3071e149",
                    "cn": [
                        {
                            "type": "Ext.view.Table",
                            "reference": {
                                "name": "viewConfig",
                                "type": "object"
                            },
                            "codeClass": null,
                            "name": "MyTable",
                            "designerId": "6b0e341a-4f52-4fc2-a8ad-9c84c03e521b"
                        },
                        {
                            "type": "Ext.grid.column.Action",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|displayName": "deleteRow",
                                "resizable": false,
                                "tdCls": "invalidCell",
                                "width": 40
                            },
                            "configAlternates": {
                                "designer|displayName": "string",
                                "resizable": "boolean",
                                "tdCls": "string",
                                "width": "auto"
                            },
                            "name": "MyActionColumn",
                            "designerId": "4f1349db-79a9-494d-9179-43f4958370e8",
                            "cn": [
                                {
                                    "type": "actioncolumnitem",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|displayName": "deleteRowButton",
                                        "icon": "images/X.png"
                                    },
                                    "configAlternates": {
                                        "designer|displayName": "string",
                                        "icon": "string"
                                    },
                                    "name": "MyActionColumnItem",
                                    "designerId": "85c88190-b21f-4bf7-8804-a5a0aa0d534e",
                                    "cn": [
                                        {
                                            "type": "fixedfunction",
                                            "reference": {
                                                "name": "items",
                                                "type": "array"
                                            },
                                            "codeClass": null,
                                            "userConfig": {
                                                "designer|params": [
                                                    "view",
                                                    "rowIndex",
                                                    "colIndex",
                                                    "item",
                                                    "e",
                                                    "record",
                                                    "row"
                                                ],
                                                "fn": "handler",
                                                "implHandler": [
                                                    "this.deleteRecord(rowIndex);"
                                                ]
                                            },
                                            "configAlternates": {
                                                "designer|params": "typedarray",
                                                "designer|viewControllerFn": "string",
                                                "fn": "string",
                                                "implHandler": "code"
                                            },
                                            "name": "handler",
                                            "designerId": "0e899d2f-ffc2-4907-b7fd-67d7674415e9"
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.RowNumberer",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "designer|displayName": "RowNumber"
                            },
                            "configAlternates": {
                                "text": "string",
                                "designer|displayName": "string",
                                "width": "number"
                            },
                            "name": "MyRowNumberer",
                            "designerId": "3cf35eed-d094-4d0f-b890-9d6dde361dca"
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Name",
                                "text": "Name",
                                "width": 170
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto"
                            },
                            "name": "MyColumn1",
                            "designerId": "ec0fcd93-eefb-47f0-ab8b-4872e401e3f5",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editName"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField1",
                                    "designerId": "3a0c9be2-ad17-4f07-a642-0f94c5880506"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Address",
                                "text": "Address",
                                "width": 190
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto"
                            },
                            "name": "MyColumn2",
                            "designerId": "8ffdb90f-004e-4aeb-9d91-78359e5bf7b3",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editAddress"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField2",
                                    "designerId": "bde77d07-92cc-4202-afe1-9a6b4a17af11"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Address 2",
                                "text": "Address 2"
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string"
                            },
                            "name": "MyColumn3",
                            "designerId": "53019e9d-6d06-41e8-aea6-273a7f654c31",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editAddress2"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField3",
                                    "designerId": "7aeee2d2-f876-47c6-a786-d7aebb399701"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "City",
                                "text": "City"
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string"
                            },
                            "name": "MyColumn4",
                            "designerId": "cbf7fa0b-4018-48e7-beac-9ad93fa10fc1",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editCity"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField4",
                                    "designerId": "841c7985-c456-48b9-a601-44af0ff6ae57"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "State",
                                "id": "stateEditField",
                                "text": "State",
                                "width": 70
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "id": "string"
                            },
                            "name": "MyColumn5",
                            "designerId": "3ac56c29-d69e-4e1b-9c0a-589b6139dc29",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editState"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField5",
                                    "designerId": "6bf77124-72c7-4418-b251-46964952796f"
                                },
                                {
                                    "type": "fixedfunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "value",
                                            "metaData",
                                            "record",
                                            "rowIndex",
                                            "colIndex",
                                            "store",
                                            "view"
                                        ],
                                        "fn": "renderer",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().validateState(value, metaData);",
                                            "return value;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "designer|viewControllerFn": "string",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "renderer",
                                    "designerId": "044ce16f-3cca-45b5-8dab-71b81d0857f1"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Zip",
                                "text": "Zip",
                                "width": 65
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto"
                            },
                            "name": "MyColumn6",
                            "designerId": "e05d6ebd-9645-44a8-878c-ec5cb69714e1",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editZip"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField6",
                                    "designerId": "86b97eee-0e54-4e66-a091-d0db808c325c"
                                },
                                {
                                    "type": "fixedfunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "value",
                                            "metaData",
                                            "record",
                                            "rowIndex",
                                            "colIndex",
                                            "store",
                                            "view"
                                        ],
                                        "fn": "renderer",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().validateZip(value, metaData);",
                                            "return value;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "designer|viewControllerFn": "string",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "renderer",
                                    "designerId": "cd8f7035-b20a-45ad-b922-b7a87367386e"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Purpose",
                                "text": "Purpose"
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string"
                            },
                            "name": "MyColumn7",
                            "designerId": "44721c9e-f2a8-4240-9a0e-636c89422cb2",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editPurpose"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField7",
                                    "designerId": "2b7f19b8-6211-43fa-bbf3-7d16358e5a2a"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Property Owner",
                                "text": "Property Owner",
                                "width": 128
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto"
                            },
                            "name": "MyColumn8",
                            "designerId": "e06094de-296c-41fc-b9dc-e9b66b8148c6",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editPropertyOwner"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField8",
                                    "designerId": "d70dc818-2997-496d-94d6-8b9395d38ce7"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Creation Date",
                                "text": "Creation Date",
                                "width": 118
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "formatter": "string"
                            },
                            "name": "MyColumn9",
                            "designerId": "b65095ad-2bdb-481e-94e8-d03f213ab82b",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editCreationDate"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField9",
                                    "designerId": "21319a59-9ba4-4cc1-8787-235d91802836"
                                },
                                {
                                    "type": "fixedfunction",
                                    "reference": {
                                        "name": "items",
                                        "type": "array"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "designer|params": [
                                            "value",
                                            "metaData",
                                            "record",
                                            "rowIndex",
                                            "colIndex",
                                            "store",
                                            "view"
                                        ],
                                        "fn": "renderer",
                                        "implHandler": [
                                            "StunningOctoPancake.app.getOctoPancakeControlController().validateDate(value, metaData);",
                                            "return value;"
                                        ]
                                    },
                                    "configAlternates": {
                                        "designer|params": "typedarray",
                                        "designer|viewControllerFn": "string",
                                        "fn": "string",
                                        "implHandler": "code"
                                    },
                                    "name": "renderer",
                                    "designerId": "af11a23f-ef47-42a3-9e83-2a68f90cb5ef"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Lat",
                                "hidden": true,
                                "id": "editLat",
                                "text": "Lat"
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "hidden": "boolean",
                                "id": "string"
                            },
                            "name": "MyColumn10",
                            "designerId": "ef8a0b4b-9a87-4bbe-a909-bf0da306afc1"
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "Long",
                                "hidden": true,
                                "id": "editLong",
                                "text": "Long",
                                "width": 155
                            },
                            "configAlternates": {
                                "dataIndex": "datafield",
                                "text": "string",
                                "width": "auto",
                                "hidden": "boolean",
                                "id": "string"
                            },
                            "name": "MyColumn11",
                            "designerId": "7d867bfd-0990-4924-8d63-d42976458dce"
                        },
                        {
                            "type": "Ext.grid.column.Column",
                            "reference": {
                                "name": "columns",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "dataIndex": "__parsed_extra",
                                "hidden": true,
                                "id": "extra1",
                                "text": "__parsed_extra"
                            },
                            "configAlternates": {
                                "text": "string",
                                "dataIndex": "datafield",
                                "hidden": "boolean",
                                "id": "string"
                            },
                            "name": "MyColumn",
                            "designerId": "631ac7f2-76d7-41ba-9ffa-bf05adf24fcc",
                            "cn": [
                                {
                                    "type": "Ext.form.field.Text",
                                    "reference": {
                                        "name": "editor",
                                        "type": "object"
                                    },
                                    "codeClass": null,
                                    "userConfig": {
                                        "id": "editExtra"
                                    },
                                    "configAlternates": {
                                        "id": "string"
                                    },
                                    "name": "MyTextField10",
                                    "designerId": "a36a74d3-98b1-4dc6-9420-5c8516df7fc8"
                                }
                            ]
                        },
                        {
                            "type": "Ext.grid.plugin.CellEditing",
                            "reference": {
                                "name": "plugins",
                                "type": "array"
                            },
                            "codeClass": null,
                            "userConfig": {
                                "clicksToEdit": 1,
                                "pluginId": "recordCellEditor"
                            },
                            "configAlternates": {
                                "clicksToEdit": "number",
                                "pluginId": "string"
                            },
                            "name": "MyCellEditingPlugin",
                            "designerId": "ed432f87-3a7a-4803-94c3-68e2483938b5"
                        }
                    ]
                }
            ]
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "title",
                    "html"
                ],
                "fn": "createResultsPanel",
                "implHandler": [
                    "Ext.create('Ext.panel.Panel', {",
                    "    title: title,",
                    "    minHeight: '300',",
                    "    layout: 'fit',",
                    "    renderTo: \"resultsPanelDiv\",",
                    "    bodyPadding: 10,",
                    "    html: html",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "createResultsPanel",
            "designerId": "f2510ff8-9722-4458-8bff-dce06ac8eaa4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "err"
                ],
                "fn": "ErrorResponse",
                "implHandler": [
                    "Ext.MessageBox.alert(`${err.status}`, err.statusText);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "ErrorResponse",
            "designerId": "a5d09762-0f65-4fab-b7df-64ba3aed1aa1"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "app",
                    "controller",
                    "errorResponse"
                ],
                "fn": "searchRecords",
                "implHandler": [
                    "Ext.getCmp('resultsPanelContainer').show();",
                    "$('#resultsPanelDiv').html('');",
                    "",
                    "$.ajax({",
                    "    url: `/imports/search?term=${document.getElementById(\"search-inputEl\").value}`,",
                    "    type: \"get\",",
                    "    success: res => {",
                    "        if (res.length > 0) {",
                    "            controller.createResultsPanel('Search Results', '<div id=\"resultsPanel\"></div>');",
                    "            res.forEach(e => {",
                    "                Ext.create('Ext.Button', {",
                    "                    text: e.import_name,",
                    "                    renderTo: \"resultsPanel\",",
                    "                    handler: function() {",
                    "                        controller.getRecords(app, controller, e.id, e.import_name);",
                    "                    }",
                    "                });",
                    "            });",
                    "        } else {",
                    "            controller.createResultsPanel('No Results', `<h2>No results matching ${document.getElementById(\"search-inputEl\").value} found.</h2>`);",
                    "        }",
                    "    },",
                    "    error: err => {",
                    "        errorResponse(err);",
                    "    }",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "searchRecords",
            "designerId": "dd31be8d-20e0-4994-a340-767f6ad926c8"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "columnId"
                ],
                "fn": "sortRecords",
                "implHandler": [
                    "const app = StunningOctoPancake.app;",
                    "const controller = app.getOctoPancakeControlController();",
                    "let sortOrder;",
                    "",
                    "if (app.FromDB) {",
                    "    if (app.SortASC) {",
                    "        sortOrder = \"ASC\";",
                    "        app.SortASC = false;",
                    "    } else {",
                    "        sortOrder = \"DESC\";",
                    "        app.SortASC = true;",
                    "    }",
                    "    controller.getRecords(app, controller, app.FieldData[0].import_id, app.Filename, `/sort${sortOrder}`, columnId);",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "sortRecords",
            "designerId": "fd2e58e7-58bf-4e8c-b1df-6a3f36ef570b"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "app",
                    "controller",
                    "import_id",
                    "import_name",
                    "sort",
                    "field"
                ],
                "fn": "getRecords",
                "implHandler": [
                    "let sortOrder = \"\";",
                    "let term = \"\";",
                    "",
                    "if (sort) {",
                    "    sortOrder = sort;",
                    "}",
                    "if (field) {",
                    "    if (field === \"Address_2\") {",
                    "        field = \"Address%202\";",
                    "    } else if (field === \"Property_Owner\") {",
                    "        field = \"Property%20Owner\";",
                    "    } else if (field === \"Creation_Date\") {",
                    "        field = \"Creation%20Date\";",
                    "    }",
                    "    term = `?term=%22${field}%22`;",
                    "}",
                    "",
                    "$('#resultsPanelDiv').html('');",
                    "app.Filename = import_name;",
                    "$.ajax({",
                    "    url: `/imports/${import_id}${sortOrder}/records/${term}`,",
                    "    type: \"get\",",
                    "    success: res => {",
                    "        if (res.length > 0) {",
                    "            app.FromDB = true;",
                    "            app.FieldNames = app.Names;",
                    "            controller.showLatLong(app);",
                    "            app.FieldData = res;",
                    "            Ext.getCmp('resultsPanelContainer').hide();",
                    "            controller.setView(app.FieldData, app.Filename);",
                    "        } else {",
                    "            controller.createResultsPanel('No Records', `<h2>No records found for ${app.Filename}</h2>`);",
                    "        }",
                    "    },",
                    "    error: err => {",
                    "        controller.ErrorResponse(err);",
                    "    }",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getRecords",
            "designerId": "a1b72da2-57e4-402b-b07a-bc0e444b3228"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "btn",
                    "text"
                ],
                "fn": "postData",
                "implHandler": [
                    "const app = StunningOctoPancake.app;",
                    "const data = { import_name: text };",
                    "const errorResponse = this.ErrorResponse;",
                    "",
                    "function saveResponse(i) {",
                    "    app.Filename = text;",
                    "    Ext.MessageBox.alert(\"Saved\", Ext.String.format('\"{0}\" saved.', text));",
                    "    Ext.getCmp('importFileName').setTitle(app.Filename);",
                    "    Ext.getCmp('editImportFileName').setTitle(app.Filename);",
                    "}",
                    "",
                    "if (btn === \"ok\") {",
                    "    $.ajax({",
                    "        url: \"/imports/\",",
                    "        type: \"post\",",
                    "        data: JSON.stringify(data),",
                    "        dataType: \"json\",",
                    "        contentType: \"application/json\",",
                    "        success: res => {",
                    "            for (let i = 0; i < app.FieldData.length; i += 1) {",
                    "                const e = app.FieldData[i];",
                    "                delete e.id;",
                    "                $.ajax({",
                    "                    url: `/imports/${res.id}/records`,",
                    "                    type: \"post\",",
                    "                    data: JSON.stringify(e),",
                    "                    dataType: \"json\",",
                    "                    contentType: \"application/json\",",
                    "                    success: saveResponse(i),",
                    "                    error: errorResponse",
                    "                });",
                    "            }",
                    "        },",
                    "        error: err => {",
                    "            errorResponse(err);",
                    "        }",
                    "    });",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "postData",
            "designerId": "9ab2cc35-26ff-45f6-84a2-850b95fd07cc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "r",
                    "map",
                    "m"
                ],
                "fn": "showInfoWin",
                "implHandler": [
                    "const app = StunningOctoPancake.app;",
                    "const record = app.FieldData[r];",
                    "",
                    "app.InfoWindow.setContent(`",
                    "    <div id=\"content\">",
                    "        <div id=\"siteNotice\"></div>",
                    "        <h1 id=\"firstHeading\" class=\"firstHeading\">${record.Name}</h1>",
                    "        <div id=\"bodyContent\">",
                    "            ${record.Address} ${record[\"Address 2\"]} ${record.City} ${record.State}",
                    "            ${record.Zip}",
                    "            <br>",
                    "            <b style=\"font-weight: 900\">Purpose:</b> ${record.Purpose} <b style=\"font-weight: 900\">Property Owner:</b>",
                    "            ${record[\"Property Owner\"]} <b style=\"font-weight: 900\">Creation Date:</b> ${record[\"Creation Date\"]}",
                    "        </div>",
                    "    </div>",
                    "`);",
                    "app.InfoWindow.open(map, m);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "showInfoWin",
            "designerId": "622e1d2f-aa45-48c2-92c6-a83bca45acb3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "app"
                ],
                "fn": "showLatLong",
                "implHandler": [
                    "if (app.FieldNames && app.Names.length < app.Names.length + 2 && app.FieldNames.length < app.Names.length + 2) {",
                    "    app.Names.push(\"Lat\", \"Long\");",
                    "    app.FieldNames.push(\"Lat\", \"Long\");",
                    "    Ext.getCmp(\"Lat\").show();",
                    "    Ext.getCmp(\"Long\").show();",
                    "    Ext.getCmp(\"editLat\").show();",
                    "    Ext.getCmp(\"editLong\").show();",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "showLatLong",
            "designerId": "0dd64eed-b405-4e55-9919-ab181fcb8969"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "interval",
                    "status",
                    "a"
                ],
                "fn": "fixGeocodeFail",
                "implHandler": [
                    "clearInterval(interval);",
                    "Ext.MessageBox.alert(status, `Geocode was not successful for the following reason: ${status}: ${a}`);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "fixGeocodeFail",
            "designerId": "bbaa6733-987f-464d-8863-19b24a17e08c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "record",
                    "geocoder",
                    "map",
                    "markers",
                    "controller",
                    "rowIndex"
                ],
                "fn": "geocodeLatLng",
                "implHandler": [
                    "const input0 = record.Lat;",
                    "const input1 = record.Long;",
                    "const latlng = {",
                    "    lat: parseFloat(input0),",
                    "    lng: parseFloat(input1)",
                    "};",
                    "geocoder.geocode({ location: latlng }, (results, status) => {",
                    "    if (status === \"OK\") {",
                    "        if (results[0]) {",
                    "            map.setZoom(15);",
                    "            const marker = new google.maps.Marker({",
                    "                position: latlng,",
                    "                map",
                    "            });",
                    "            markers.push(marker);",
                    "            marker.addListener(\"click\", () => {",
                    "                map.setZoom(15);",
                    "                controller.showInfoWin(rowIndex, map, marker);",
                    "                map.setCenter(results[0].geometry.location);",
                    "            });",
                    "            controller.showInfoWin(rowIndex, map, marker);",
                    "            map.setCenter(results[0].geometry.location);",
                    "        } else {",
                    "            Ext.MessageBox.alert(\"noResults\", \"No results found\");",
                    "        }",
                    "    } else {",
                    "        Ext.MessageBox.alert(\"error\", \"Geocoder failed due to: Error\");",
                    "    }",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "geocodeLatLng",
            "designerId": "daeaa9a8-216e-4cf8-8e01-ad6592ba60eb"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "a",
                    "fd",
                    "interval",
                    "map",
                    "markers",
                    "r"
                ],
                "fn": "codeAddress",
                "implHandler": [
                    "const geocoder = new google.maps.Geocoder();",
                    "",
                    "geocoder.geocode(",
                    "    {address: a},",
                    "    (results, status) => {",
                    "        if (status === \"OK\") {",
                    "            lat = results[0].geometry.location.lat();",
                    "            long = results[0].geometry.location.lng();",
                    "            for (const k in fd) {",
                    "                if (fd.hasOwnProperty(k)) {",
                    "                    const f = fd[k];",
                    "                    const addressComponents = results[0].address_components;",
                    "                    switch (f) {",
                    "                        case fd.Address:",
                    "                            let address = \"\";",
                    "                            for (let i = 0; i < addressComponents.length; i += 1) {",
                    "                                const e = addressComponents[i];",
                    "                                if (e.types[0] === \"street_number\") {",
                    "                                    address += e.short_name;",
                    "                                } else if (e.types[0] === \"route\") {",
                    "                                    address += ` ${e.short_name}`;",
                    "                                    if (fd.Address != address) {",
                    "                                        fd.Address = address;",
                    "                                    }",
                    "                                    break;",
                    "                                }",
                    "                            }",
                    "                            break;",
                    "                        case fd.City:",
                    "                            for (let i = 0; i < addressComponents.length; i++) {",
                    "                                const e = addressComponents[i];",
                    "                                if (e.types[0] === \"locality\" && fd.City != e.long_name) {",
                    "                                    fd.City = e.long_name;",
                    "                                }",
                    "                            }",
                    "                            break;",
                    "                        case fd.State:",
                    "                            for (let i = 0; i < addressComponents.length; i += 1) {",
                    "                                const e = addressComponents[i];",
                    "                                if (e.types[0] === \"administrative_area_level_1\" && fd.State != e.short_name) {",
                    "                                    fd.State = e.short_name;",
                    "                                }",
                    "                            }",
                    "                            break;",
                    "                        case fd.Zip:",
                    "                            for (let i = 0; i < addressComponents.length; i += 1) {",
                    "                                const e = addressComponents[i];",
                    "                                if (e.types[0] === \"postal_code\" && fd.Zip != e.short_name) {",
                    "                                    fd.Zip = e.short_name;",
                    "                                }",
                    "                            }",
                    "                            break;",
                    "                        default:",
                    "                    }",
                    "                }",
                    "            }",
                    "            fd.Lat = lat;",
                    "            fd.Long = long;",
                    "            map.setCenter(results[0].geometry.location);",
                    "            const marker = new google.maps.Marker({map, position: results[0].geometry.location});",
                    "            markers.push(marker);",
                    "            marker.addListener(\"click\", () => {",
                    "                map.setZoom(15);",
                    "                map.setCenter(results[0].geometry.location);",
                    "                this.showInfoWin(r, map, marker);",
                    "            });",
                    "        } else {",
                    "            this.fixGeocodeFail(interval, status, a);",
                    "        }",
                    "    }",
                    ");"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "codeAddress",
            "designerId": "0df20c9c-30b0-455f-a056-e354e2e5e465"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "setMarkerBounds",
                "implHandler": [
                    "const app = StunningOctoPancake.app;",
                    "const bounds = new google.maps.LatLngBounds();",
                    "const map = app.Map;",
                    "const markers = app.Markers;",
                    "",
                    "for (let i = 0; i < markers.length; i += 1) {",
                    "    const e = markers[i];",
                    "    bounds.extend(e.getPosition());",
                    "}",
                    "map.setCenter(bounds.getCenter());",
                    "google.maps.event.addListenerOnce(map, \"zoom_changed\", () => {",
                    "    if (map.getZoom() > 15) {",
                    "        map.setZoom(15);",
                    "    }",
                    "});",
                    "map.fitBounds(bounds);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setMarkerBounds",
            "designerId": "0afa8b6d-dda4-4389-b3b1-b2a68866408f"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "showAllControlDiv"
                ],
                "fn": "ShowAllMarkers",
                "implHandler": [
                    "const controlUI = document.createElement(\"div\");",
                    "controlUI.setAttribute(\"id\", \"showAllMarkers\");",
                    "controlUI.style.backgroundColor = \"#fff\";",
                    "controlUI.style.border = \"2px solid #fff\";",
                    "controlUI.style.borderRadius = \"3px\";",
                    "controlUI.style.boxShadow = \"0 2px 6px rgba(0,0,0,.3)\";",
                    "controlUI.style.cursor = \"pointer\";",
                    "controlUI.style.marginBottom = \"22px\";",
                    "controlUI.style.textAlign = \"center\";",
                    "controlUI.title = \"Click to show all markers\";",
                    "showAllControlDiv.appendChild(controlUI);",
                    "",
                    "const controlText = document.createElement(\"div\");",
                    "controlText.style.color = \"rgb(25,25,25)\";",
                    "controlText.style.fontFamily = \"Roboto,Arial,sans-serif\";",
                    "controlText.style.fontSize = \"16px\";",
                    "controlText.style.lineHeight = \"38px\";",
                    "controlText.style.paddingLeft = \"5px\";",
                    "controlText.style.paddingRight = \"5px\";",
                    "controlText.innerHTML = \"Show All Markers\";",
                    "controlUI.appendChild(controlText);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "ShowAllMarkers",
            "designerId": "b394b599-0b81-445d-b209-e3763cd7c6ba"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|commentHeader": [
                    "Initialize Map"
                ],
                "designer|params": [
                    "app"
                ],
                "fn": "initialize",
                "implHandler": [
                    "$(\"#map\").css({",
                    "    width: \"832.5\",",
                    "    height: \"400px\",",
                    "    margin: \"30px auto 0\"",
                    "});",
                    "app.InfoWindow = new google.maps.InfoWindow({",
                    "    maxWidth: 400",
                    "});",
                    "const latlng = new google.maps.LatLng(38.92861, -98.579458);",
                    "const mapOptions = {",
                    "    zoom: 4,",
                    "    center: latlng",
                    "};",
                    "app.Map = new google.maps.Map(document.getElementById(\"map\"), mapOptions);",
                    "const showAllControlDiv = document.createElement(\"div\");",
                    "const showAllMarkers = new this.ShowAllMarkers(showAllControlDiv);",
                    "",
                    "showAllControlDiv.index = 1;",
                    "app.Map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(",
                    "    showAllControlDiv",
                    ");",
                    "app.Mapped = true;"
                ]
            },
            "configAlternates": {
                "designer|commentHeader": "comment",
                "fn": "string",
                "implHandler": "code",
                "designer|params": "typedarray"
            },
            "name": "initialize",
            "designerId": "dd70c219-08b7-4c08-8f0a-415b1cd851be"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "app",
                    "a"
                ],
                "fn": "geoIterate",
                "implHandler": [
                    "const geocoder = new google.maps.Geocoder();",
                    "const markers = app.Markers;",
                    "const controller = app.getOctoPancakeControlController();",
                    "let counter = a.length;",
                    "let i = 0;",
                    "let intervalId;",
                    "",
                    "function stop() {",
                    "    clearInterval(intervalId);",
                    "    controller.setMarkerBounds();",
                    "    $(\"#showAllMarkers\").click(controller.setMarkerBounds);",
                    "    if (!app.FromDB) {",
                    "        Ext.getCmp('saveRecords').show();",
                    "    }",
                    "}",
                    "",
                    "function start() {",
                    "    if (counter === 0) {",
                    "        stop();",
                    "    } else if (markers.length < app.FieldData.length) {",
                    "        if (app.FromDB || !app.FieldData[i].Lat && !app.FieldData[i].Long) {",
                    "            controller.codeAddress(a[i], app.FieldData[i], intervalId, app.Map, markers, i);",
                    "        }",
                    "    } else {",
                    "        stop();",
                    "    }",
                    "    Ext.StoreMgr.get('octo.RecordDS').setData(StunningOctoPancake.app.FieldData);",
                    "    counter--;",
                    "    i++;",
                    "}",
                    "intervalId = setInterval(start, 500);",
                    "controller.showLatLong(app);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "geoIterate",
            "designerId": "11d0ee4e-a88e-4c3c-a446-2badbb1ff76e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "app"
                ],
                "fn": "getAddressList",
                "implHandler": [
                    "const addressList = [];",
                    "let recordAddress;",
                    "",
                    "for (let i = 0; i < app.FieldData.length; i++) {",
                    "    const r = app.FieldData[i];",
                    "    recordAddress = `${r.Name} ${r.Address} ${r[\"Address 2\"]} ${r.City} ${r.State} ${r.Zip}`;",
                    "    addressList.push(recordAddress);",
                    "    recordAddress = \"\";",
                    "}",
                    "this.geoIterate(app, addressList);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "getAddressList",
            "designerId": "fb44c7d9-27fb-4ebf-ba0e-61df9c9d03f3"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "app",
                    "controller",
                    "message",
                    "row",
                    "recordRow"
                ],
                "fn": "repairRecord",
                "implHandler": [
                    "if (recordRow !== undefined && recordRow.__parsed_extra !== undefined) {",
                    "    if (recordRow.__parsed_extra === \"\" || recordRow.__parsed_extra[0] === \"\") {",
                    "        delete recordRow.__parsed_extra;",
                    "    }",
                    "}",
                    "if (Object.keys(recordRow).length - 1 === app.Names.length) {",
                    "    app.FieldErrors.splice(0, 1);",
                    "    Ext.getCmp('recordButtons').hide();",
                    "    Ext.getCmp('repairNext').hide();",
                    "    Ext.getCmp('importFileName').hide();",
                    "    Ext.getCmp('editImportFileName').hide();",
                    "    Ext.getCmp('extra').hide();",
                    "    Ext.getCmp('extra1').hide();",
                    "    Ext.getCmp('saveEdits').hide();",
                    "    Ext.getCmp('editData').show();",
                    "    controller.completeFn(app.FullResults);",
                    "} else {",
                    "    Ext.MessageBox.alert(`Error`, `${message} in Row: ${row + 1}`);",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "repairRecord",
            "designerId": "76f2b5c9-08e7-4ba0-940c-9f8d1b1ad6b4"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "fd"
                ],
                "fn": "updateRecord",
                "implHandler": [
                    "$.ajax({",
                    "    url: `/imports/${fd.import_id}/records/${fd.id}`,",
                    "    type: 'put',",
                    "    data: JSON.stringify(fd),",
                    "    dataType: 'json',",
                    "    contentType: 'application/json',",
                    "    success: res => {",
                    "        Ext.MessageBox.alert('Updated', 'Record Updated');",
                    "    },",
                    "    error: err => {",
                    "        this.ErrorResponse(err);",
                    "    }",
                    "});"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "updateRecord",
            "designerId": "4e94e157-6a7b-43d0-93ce-ed982da5c42c"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "row"
                ],
                "fn": "deleteRecord",
                "implHandler": [
                    "if (this.ErrorCount > 0) {",
                    "    row = this.FirstError.row;",
                    "    for (let i = 0; i < this.FieldErrors.length; i++) {",
                    "        this.FieldErrors[i].row--;",
                    "    }",
                    "    this.FieldErrors.splice(0, 1);",
                    "}",
                    "if (this.FromDB) {",
                    "    const recordId = this.FieldData[row].id;",
                    "    const importId = this.FieldData[row].import_id;",
                    "    $.ajax({",
                    "        url: `/imports/${importId}/records/${recordId}`,",
                    "        type: \"delete\",",
                    "        success: res => {",
                    "            this.FieldData.splice(row, 1);",
                    "            this.setView(this.FieldData, this.Filename);",
                    "            // keep both grids from appearing after deleting a record",
                    "            Ext.getCmp('importFileName').hide();",
                    "            Ext.MessageBox.alert(\"Deleted\", \"Deleted Record.\");",
                    "        },",
                    "        error: err => {",
                    "            this.ErrorResponse(err);",
                    "        }",
                    "    });",
                    "} else {",
                    "    this.FieldData.splice(row, 1);",
                    "    this.completeFn(this.FullResults);",
                    "    // keep both grids from appearing after deleting a record",
                    "    Ext.getCmp('importFileName').hide();",
                    "}",
                    "",
                    "Ext.getCmp('repairNext').hide();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "deleteRecord",
            "designerId": "da293f71-de7a-4c70-8fc5-c433e9b334a5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value",
                    "metaData"
                ],
                "fn": "validateDate",
                "implHandler": [
                    "let validDate = false;",
                    "const regexp = /^\\d{4}-\\d{2}-\\d{2}$/;",
                    "",
                    "if (value && value.match(regexp)) {",
                    "    validDate = true;",
                    "}",
                    "",
                    "const d = new Date(value);",
                    "",
                    "if (!d.getTime() && d.getTime() !== 0 && validDate) {",
                    "    validDate = false;",
                    "    console.log(`${value} is an invalid date`);",
                    "}",
                    "",
                    "if (!validDate) {",
                    "    metaData.innerCls = 'invalidCell';",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "validateDate",
            "designerId": "951cd19b-26e2-48b7-afc5-24ed5f742623"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value",
                    "metaData"
                ],
                "fn": "validateZip",
                "implHandler": [
                    "let validZip = false;",
                    "const regexp = /^[0-9]{5}(?:-[0-9]{4})?$/;",
                    "",
                    "if (value.length === 5) {",
                    "    validZip = true;",
                    "}",
                    "if (regexp.test(value)) {",
                    "    validZip = true;",
                    "} else {",
                    "    validZip = false;",
                    "}",
                    "if (!validZip) {",
                    "    metaData.innerCls = 'invalidCell';",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "validateZip",
            "designerId": "3952098c-0b41-4f26-b87e-728ccdda79cc"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "value",
                    "metaData"
                ],
                "fn": "validateState",
                "implHandler": [
                    "const states = [\"AL\", \"AK\", \"AS\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"DC\", \"FM\", \"FL\", \"GA\", \"GU\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MH\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MP\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"MP\", \"OH\", \"OK\", \"OR\", \"PW\", \"PA\", \"PR\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VI\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"];",
                    "",
                    "let validState = false;",
                    "",
                    "for (let i = 0; i < states.length; i++) {",
                    "    if (value === states[i]) {",
                    "        validState = true;",
                    "        break;",
                    "    }",
                    "}",
                    "if (!validState) {",
                    "    metaData.innerCls = 'invalidCell';",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "validateState",
            "designerId": "f04e7c33-37a2-4ac1-8934-f85590149353"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "fd",
                    "file"
                ],
                "fn": "setView",
                "implHandler": [
                    "Ext.StoreMgr.get('octo.RecordDS').clearData();",
                    "Ext.getCmp('importFileName').setTitle(file);",
                    "Ext.getCmp('editImportFileName').setTitle(file);",
                    "Ext.getCmp('recordButtons').show();",
                    "Ext.getCmp('importFileName').show();",
                    "Ext.getCmp('tabs').hide();",
                    "Ext.StoreMgr.get('octo.RecordDS').setData(fd);",
                    "if (fd[0] !== undefined && fd[0].__parsed_extra) {",
                    "    Ext.getCmp('extra').show();",
                    "    Ext.getCmp('extra1').show();",
                    "} else {",
                    "    Ext.getCmp('extra').hide();",
                    "    Ext.getCmp('extra1').hide();",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setView",
            "designerId": "2af8c172-dfe7-47af-b6aa-4f28c1129a64"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateRowLengths",
                "implHandler": [
                    "if (this.ErrorCount > 0) {",
                    "    const message = this.FirstError.message;",
                    "    const row = this.FirstError.row;",
                    "    Ext.MessageBox.alert(`Error`, `${message} in Row: ${row + 1}`);",
                    "    Ext.getCmp('mapData').hide();",
                    "    Ext.getCmp('repairNext').show();",
                    "    this.setView([this.FieldData[row]], this.Filename);",
                    "} else {",
                    "    Ext.getCmp('mapData').show();",
                    "    Ext.getCmp('repairNext').hide();",
                    "    this.setView(this.FieldData, this.Filename);",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "validateRowLengths",
            "designerId": "4828bbae-0f06-4e85-9956-c303d0b6a04a"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "messageBoxOkButton",
                "implHandler": [
                    "this.validateRowLengths(this.FieldData, this.ErrorCount, this.FirstError, this.Filename);"
                ]
            },
            "configAlternates": {
                "fn": "string",
                "implHandler": "code"
            },
            "name": "messageBoxOkButton",
            "designerId": "e58e5afb-04f8-40c7-b0dd-2fe4f9061cb5"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateFieldNames",
                "implHandler": [
                    "let updated = false;",
                    "",
                    "for (let i = 0; i < this.FieldNames.length; i ++) {",
                    "    const oldKey = this.FieldNames[i];",
                    "    this.FieldNames[i] = this.Names[i];",
                    "    const newKey = this.FieldNames[i];",
                    "    if (oldKey != newKey) {",
                    "        let j = 0;",
                    "        while (j < this.FieldData.length) {",
                    "            const e = this.FieldData[j];",
                    "            e[newKey] = e[oldKey];",
                    "            delete e[oldKey];",
                    "            j++;",
                    "        }",
                    "        updated = true;",
                    "    }",
                    "}",
                    "if (updated) {",
                    "    Ext.MessageBox.alert(`Update`, `Corrected invalid column names`, this.messageBoxOkButton, this);",
                    "} else {",
                    "    this.validateRowLengths();",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "validateFieldNames",
            "designerId": "de6c1d62-d9fe-432b-95a9-36371c339a88"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "fn": "validateFieldLength",
                "implHandler": [
                    "if (this.FieldNames.length != this.Names.length) {",
                    "    console.log(\"header length is wrong\");",
                    "    let codeWord;",
                    "    if (this.FieldNames.length < this.Names.length) {",
                    "        codeWord = \"few\";",
                    "    } else {",
                    "        codeWord = \"many\";",
                    "    }",
                    "    Ext.MessageBox.alert(`Too ${codeWord} fields`, `Expected ${this.Names.length} fields but parsed ${this.FieldNames.length} in \"${this.Filename}\", Row: 0. Header length errors must be corrected within file before further processing to prevent data loss.`);",
                    "} else {",
                    "    this.validateFieldNames();",
                    "}"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "validateFieldLength",
            "designerId": "48994425-a895-464e-ab92-18daa0fe8865"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "msg"
                ],
                "fn": "printStats",
                "implHandler": [
                    "console.log(msg);",
                    "console.log(this.FirstError || 'No column length errors');",
                    "console.log(\"  Row count:\", this.RowCount);",
                    "console.log(\"     Errors:\", this.ErrorCount);",
                    "console.log(\"    Results:\", this.FullResults);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "printStats",
            "designerId": "c1f8ab58-9f8d-4e9e-981f-30fbe7e2024e"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "r"
                ],
                "fn": "setResults",
                "implHandler": [
                    "this.setFullResults(r);",
                    "this.setFieldNames(this.FullResults.meta.fields);",
                    "this.setFieldData(this.FullResults.data);",
                    "this.setFieldErrors(this.FullResults.errors);",
                    "this.setErrorCount(this.FieldErrors.length);",
                    "this.setFirstError(this.FieldErrors[0]);",
                    "this.setRowCount(this.FieldData.length);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "setResults",
            "designerId": "32a7dd72-59e1-4cbd-8850-2936f6fb3d99"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "results"
                ],
                "fn": "completeFn",
                "implHandler": [
                    "const octoPancake = Ext.getCmp('octoPancake');",
                    "",
                    "octoPancake.setResults(results);",
                    "octoPancake.printStats('Parse complete');",
                    "octoPancake.validateFieldLength();"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "completeFn",
            "designerId": "7a3934ea-529e-4415-9541-0137635f8183"
        },
        {
            "type": "basicfunction",
            "reference": {
                "name": "items",
                "type": "array"
            },
            "codeClass": null,
            "userConfig": {
                "designer|params": [
                    "err",
                    "file"
                ],
                "fn": "errorFn",
                "implHandler": [
                    "console.log('ERROR:', err, file);"
                ]
            },
            "configAlternates": {
                "designer|params": "typedarray",
                "fn": "string",
                "implHandler": "code"
            },
            "name": "errorFn",
            "designerId": "585bde69-afe4-4d79-88c7-43b33c4527c5"
        }
    ]
}